Consider Following Schema   
Employee (Employee_id, First_name, last_name , hire_date, salary,  
Job_title, manager_id, department_id)   
Departments(Department_id, Department_name, Manager_id,  
Location_id)   
Locations(location_id ,street_address ,postal_code, city, state, country_id)  
1. Write a query to find the names (first_name, last_name), the salary of  
the employees who earn the same salary as the minimum salary for all  
departments.   
2. Write a query to display the employee ID, first name, last names, salary  
of all employees whose salary is above average for their departments.   
3. Write a query to find the employee id, name (last_name) along with  
their manager_id, manager name (last_name).   
4. Find the names and hire date of the employees who were hired after  
'Jones'.   
5. Write a query to get the department name and number of employees in the  
department. 



### Schema and Sample Data Inserts

```sql
-- Create Employee table
CREATE TABLE Employee (
    Employee_id INT PRIMARY KEY,
    First_name VARCHAR(50),
    Last_name VARCHAR(50),
    Hire_date DATE,
    Salary DECIMAL(10, 2),
    Job_title VARCHAR(50),
    Manager_id INT,
    Department_id INT
);

-- Create Departments table
CREATE TABLE Departments (
    Department_id INT PRIMARY KEY,
    Department_name VARCHAR(50),
    Manager_id INT,
    Location_id INT
);

-- Create Locations table
CREATE TABLE Locations (
    Location_id INT PRIMARY KEY,
    Street_address VARCHAR(100),
    Postal_code VARCHAR(20),
    City VARCHAR(50),
    State VARCHAR(50),
    Country_id VARCHAR(20)
);

-- Insert sample data into Employee table
INSERT INTO Employee (Employee_id, First_name, Last_name, Hire_date, Salary, Job_title, Manager_id, Department_id) VALUES
(1, 'John', 'Doe', '2022-01-15', 50000, 'Developer', NULL, 1),
(2, 'Jane', 'Smith', '2021-05-10', 60000, 'Developer', 1, 1),
(3, 'Mike', 'Jones', '2020-09-23', 70000, 'Manager', NULL, 2),
(4, 'Emily', 'Davis', '2022-02-18', 50000, 'Developer', 3, 2),
(5, 'Sarah', 'Brown', '2021-07-01', 80000, 'Analyst', 3, 1);

-- Insert sample data into Departments table
INSERT INTO Departments (Department_id, Department_name, Manager_id, Location_id) VALUES
(1, 'IT', 1, 101),
(2, 'HR', 3, 102);

-- Insert sample data into Locations table
INSERT INTO Locations (Location_id, Street_address, Postal_code, City, State, Country_id) VALUES
(101, '123 Elm St', '10001', 'New York', 'NY', 'US'),
(102, '456 Oak St', '90001', 'Los Angeles', 'CA', 'US');
```

### Queries

#### Query 1: Find employees who earn the same salary as the minimum salary across all departments

```sql
SELECT First_name, Last_name, Salary
FROM Employee
WHERE Salary = (SELECT MIN(Salary) FROM Employee);
```

#### Query 2: Display employees with a salary above the average salary of their department

```sql
SELECT Employee_id, First_name, Last_name, Salary
FROM Employee AS e
WHERE Salary > (
    SELECT AVG(Salary)
    FROM Employee
    WHERE Department_id = e.Department_id
);
```

#### Query 3: Find employees along with their manager's ID and last name

```sql
SELECT e.Employee_id, e.Last_name AS Employee_Name, e.Manager_id, m.Last_name AS Manager_Name
FROM Employee AS e
LEFT JOIN Employee AS m ON e.Manager_id = m.Employee_id;
```

#### Query 4: Find employees hired after 'Jones'

```sql
SELECT First_name, Last_name, Hire_date
FROM Employee
WHERE Hire_date > (SELECT Hire_date FROM Employee WHERE Last_name = 'Jones');
```

#### Query 5: Get the department name and count of employees in each department

```sql
SELECT d.Department_name, COUNT(e.Employee_id) AS Number_of_Employees
FROM Departments AS d
LEFT JOIN Employee AS e ON d.Department_id = e.Department_id
GROUP BY d.Department_name;
``` 

